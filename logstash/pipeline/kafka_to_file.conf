input {
  kafka {
    bootstrap_servers => "kafka:9092"
    topics => ["x2i_gatling_telegraf"]
    codec => "json"
    group_id => "logstash_consumer"
    auto_offset_reset => "earliest"
    consumer_threads => 3
  }
}

filter {
  # Add timestamp from the message
  date {
    match => ["timestamp", "UNIX"]
    target => "@timestamp"
  }
}

output {
  # Route message based on the "name" field
  if [name] == "tests" {
    file {
      path => "/usr/share/logstash/output/tests.json"
      codec => json_lines
    }
    opensearch {
      hosts => ["https://opensearch:9200"]
      index => "tests-%{+YYYY.MM.dd}"
      action => "create"
      user => "admin"
      password => "Developer@123"
      ssl => true
      ssl_certificate_verification => false
    }
  } else if [name] == "requests" {
    file {
      path => "/usr/share/logstash/output/requests.json"
      codec => json_lines
    }
    opensearch {
      hosts => ["https://opensearch:9200"]
      index => "requests-%{+YYYY.MM.dd}"
      action => "create"
      user => "admin"
      password => "Developer@123"
      ssl => true
      ssl_certificate_verification => false
    }
  } else if [name] == "users" {
    file {
      path => "/usr/share/logstash/output/users.json"
      codec => json_lines
    }
    opensearch {
      hosts => ["https://opensearch:9200"]
      index => "users-%{+YYYY.MM.dd}"
      action => "create"
      user => "admin"
      password => "Developer@123"
      ssl => true
      ssl_certificate_verification => false
    }
  } else {
    # Catch any other message types
    file {
      path => "/usr/share/logstash/output/other.json"
      codec => json_lines
    }
    opensearch {
      hosts => ["https://opensearch:9200"]
      index => "other-%{+YYYY.MM.dd}"
      action => "create"
      user => "admin"
      password => "Developer@123"
      ssl => true
      ssl_certificate_verification => false
    }
  }
  
  # Optionally log to stdout for debugging
  stdout {
    codec => rubydebug
  }
}