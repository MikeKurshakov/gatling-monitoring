apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: performance-framework
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 8089
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
          readOnly: true
        readinessProbe:
          httpGet:
            path: /healthcheck
            port: 8089
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: 8089
          initialDelaySeconds: 15
          periodSeconds: 20
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: telegraf
  namespace: performance-framework
spec:
  replicas: 0
  selector:
    matchLabels:
      app: telegraf
  template:
    metadata:
      labels:
        app: telegraf
    spec:
      containers:
      - name: telegraf
        image: telegraf:latest
        ports:
        - containerPort: 8088
        volumeMounts:
        - name: telegraf-config
          mountPath: /etc/telegraf/telegraf.conf
          subPath: telegraf.conf
          readOnly: true
        - name: telegraf-inputs
          mountPath: /etc/telegraf/telegraf.d/inputs.influxdb_listener.8087.x2i_gatling.conf
          subPath: inputs.influxdb_listener.conf
          readOnly: true
        - name: telegraf-outputs
          mountPath: /etc/telegraf/telegraf.d/outputs.kafka.conf
          subPath: outputs.kafka.conf
          readOnly: true
        readinessProbe:
          httpGet:
            path: /ping
            port: 8088
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /ping
            port: 8088
          initialDelaySeconds: 15
          periodSeconds: 20
      volumes:
      - name: telegraf-config
        configMap:
          name: telegraf-config
          items:
          - key: telegraf.conf
            path: telegraf.conf
      - name: telegraf-inputs
        configMap:
          name: telegraf-config
          items:
          - key: inputs.influxdb_listener.conf
            path: inputs.influxdb_listener.conf
      - name: telegraf-outputs
        configMap:
          name: telegraf-config
          items:
          - key: outputs.kafka.conf
            path: outputs.kafka.conf
      - name: metrics-volume
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
  namespace: performance-framework
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
      - name: zookeeper
        image: confluentinc/cp-zookeeper:7.5.0
        ports:
        - containerPort: 2181
        env:
        - name: ZOOKEEPER_CLIENT_PORT
          value: "2181"
        - name: ZOOKEEPER_TICK_TIME
          value: "2000"
        - name: ZOOKEEPER_SERVER_ID
          value: "1"
        - name: ZOOKEEPER_4LW_COMMANDS_WHITELIST
          value: "mntr,conf,ruok,envi,stat"
        - name: ZOOKEEPER_SERVERS
          value: "zookeeper:2888:3888"
        - name: KAFKA_OPTS 
          value: "-Dzookeeper.4lw.commands.whitelist=mntr,conf,ruok,envi,stat"
        - name: ZOOKEEPER_OPTS
          value: "-Dzookeeper.4lw.commands.whitelist=mntr,conf,ruok,envi,stat"
        volumeMounts:
        - name: zookeeper-data
          mountPath: /var/lib/zookeeper/data
        readinessProbe:
          exec:
            command:
            - bash
            - -c
            - "echo ruok | nc localhost 2181 | grep imok"
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        livenessProbe:
          exec:
            command:
            - bash
            - -c
            - "echo ruok | nc localhost 2181 | grep imok"
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "250m"
      volumes:
      - name: zookeeper-data
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  namespace: performance-framework
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: confluentinc/cp-kafka:latest
        ports:
          - name: internal
            containerPort: 9092
          - name: external
            containerPort: 29092
        env:
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: "zookeeper:2181"
          - name: KAFKA_BROKER_ID
            value: "1"
          - name: KAFKA_LISTENERS
            value: "PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092"
          - name: KAFKA_ADVERTISED_LISTENERS
            value: "PLAINTEXT://kafka-service:9092,PLAINTEXT_HOST://localhost:29092"
          - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
            value: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
          - name: KAFKA_INTER_BROKER_LISTENER_NAME
            value: "PLAINTEXT"
          - name: KAFKA_LOG4J_LOGGERS
            value: "kafka.controller=DEBUG,kafka.producer.async.DefaultEventHandler=DEBUG,state.change.logger=DEBUG"
          - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
            value: "1"
          - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
            value: "1"
          - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
            value: "1"
          # - name: KAFKA_JMX_PORT
          #   value: "9999"
          # - name: KAFKA_JMX_HOSTNAME
          #   value: "${DOCKER_HOST_IP:-127.0.0.1}"
          - name: KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND
            value: "true"
          - name: KAFKA_HEAP_OPTS
            value: "-Xmx512M -Xms256M"
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "kafka-topics --bootstrap-server localhost:9092 --list"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "kafka-topics --bootstrap-server localhost:9092 --list"
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        resources:
          limits:
            memory: "1Gi"
            cpu: "500m"
          requests:
            memory: "512Mi"
            cpu: "250m"
      volumes:
      - name: kafka-data
        emptyDir: {}